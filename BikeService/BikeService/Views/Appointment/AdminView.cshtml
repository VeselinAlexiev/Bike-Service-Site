@model IEnumerable<BikeService.Data.Entities.Appointment>

@{
    ViewData["Title"] = "Manage Appointments";
}

<div class="container mt-5 text-light">
    <h2 class="text-warning fw-bold mb-4 text-center">🛠 Manage Appointments</h2>

    <div class="bg-dark p-4 rounded shadow mb-4 border border-warning">
        <form method="get" id="filterForm" class="row g-3">
            <div class="col-md-4">
                <label class="form-label">Filter by Date</label>
                <input type="date" name="date" value="@Context.Request.Query["date"]" class="form-control bg-dark text-white border-warning" />
            </div>

            <div class="col-md-4">
                <label class="form-label">Filter by Workshop</label>
                <select name="selectedWorkshopId" class="form-select bg-dark text-white border-warning" onchange="document.getElementById('filterForm').submit();">
                    <option value="">All Workshops</option>
                    @foreach (var workshop in ViewBag.Workshops)
                    {
                        <option value="@workshop.Value" selected="@(ViewBag.SelectedWorkshopId?.ToString() == workshop.Value ? "selected" : null)">
                            @workshop.Text
                        </option>
                    }
                </select>
            </div>

            <div class="col-md-4 d-flex align-items-end">
                <button type="submit" class="btn btn-outline-warning w-100 fw-bold">Apply Filters</button>
            </div>
        </form>

        <div class="mt-3 text-end">
            <a href="@Url.Action("AdminView", "Appointment")" class="btn btn-outline-light fw-bold btn-sm">
                Clear Filters
            </a>
        </div>
    </div>

    <div class="table-responsive mb-4">
        <table class="table table-dark table-hover border border-warning text-center align-middle" id="appointmentsTable">
            <thead class="table-warning text-dark">
                <tr>
                    <th>Workshop</th>
                    <th>User</th>
                    <th>Date</th>
                    <th>Time</th>
                    <th>Status</th>
                    <th>Details</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody id="appointmentRows">
                @foreach (var appointment in Model)
                {
                    @await Html.PartialAsync("_AppointmentRowPartial", appointment)
                }
            </tbody>
        </table>
    </div>

    <div id="loadMoreContainer" class="d-grid mb-4">
        <button id="loadMoreBtn" class="btn btn-outline-warning fw-bold" onclick="loadMoreAppointments()">
            <span id="loadMoreSpinner" class="spinner-border spinner-border-sm me-2 d-none"></span>
            Load More
        </button>
    </div>
</div>

@section Scripts {
    <script>
        let currentPage = 1;

        async function loadMoreAppointments() {
            const btn = document.getElementById('loadMoreBtn');
            const spinner = document.getElementById('loadMoreSpinner');
            btn.disabled = true;
            spinner.classList.remove('d-none');

            const selectedWorkshopId = document.querySelector('[name="selectedWorkshopId"]').value;
            const date = document.querySelector('[name="date"]').value;

            const url = `/Appointment/LoadMoreAppointments?currentPage=${currentPage + 1}&selectedWorkshopId=${selectedWorkshopId}&date=${date}`;

            const response = await fetch(url);
            const html = await response.text();

            document.getElementById('appointmentRows').insertAdjacentHTML('beforeend', html);

            currentPage++;

            if (!html.trim()) {
                document.getElementById('loadMoreContainer').remove();
            } else {
                btn.disabled = false;
                spinner.classList.add('d-none');
            }
        }
    </script>
}