@model BikeService.Web.ViewModel.Order.OrderAllViewModel

@{
    ViewData["Title"] = "Manage Orders";
}

<div class="container mt-5 text-light">
    <h2 class="text-warning fw-bold mb-4 text-center">📦 Manage Orders</h2>

    <div class="bg-dark p-4 rounded shadow mb-4 border border-warning">
        <form method="get" id="filterForm" class="row g-3">
            <div class="col-md-3">
                <label class="form-label">Search by Email</label>
                <input type="text" name="SearchEmail" value="@Model.Filter.SearchEmail" class="form-control bg-dark text-white border-warning" placeholder="e.g. user@example.com">
            </div>

            <div class="col-md-3">
                <label class="form-label">Status</label>
                <select name="Status" class="form-select bg-dark text-white border-warning">
                    <option value="">All</option>
                    <option value="Processing" selected="@(Model.Filter.Status == "Processing" ? "selected" : null)">Processing</option>
                    <option value="Pending" selected="@(Model.Filter.Status == "Pending" ? "selected" : null)">Pending</option>
                    <option value="Completed" selected="@(Model.Filter.Status == "Completed" ? "selected" : null)">Completed</option>
                    <option value="Cancelled" selected="@(Model.Filter.Status == "Cancelled" ? "selected" : null)">Cancelled</option>
                </select>
            </div>

            <div class="col-md-2">
                <label class="form-label">Date From</label>
                <input type="date" name="DateFrom" value="@(Model.Filter.DateFrom?.ToString("yyyy-MM-dd"))" class="form-control bg-dark text-white border-warning">
            </div>

            <div class="col-md-2">
                <label class="form-label">Date To</label>
                <input type="date" name="DateTo" value="@(Model.Filter.DateTo?.ToString("yyyy-MM-dd"))" class="form-control bg-dark text-white border-warning">
            </div>

            <div class="col-md-2 d-flex align-items-end">
                <button type="submit" class="btn btn-outline-warning w-100 fw-bold">Apply Filters</button>
            </div>
        </form>

        <div class="mt-3 text-end">
            <a href="@Url.Action("AllOrders", "Order")" class="btn btn-outline-light fw-bold btn-sm">
                Clear Filters
            </a>
        </div>
    </div>

    <div class="table-responsive mb-4">
        <table class="table table-dark table-hover text-center align-middle border border-warning" id="ordersTable">
            <thead class="table-warning text-dark">
                <tr>
                    <th>Order ID</th>
                    <th>User</th>
                    <th>Date</th>
                    <th>Total</th>
                    <th>Status</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody id="orderRows">
                @await Html.PartialAsync("_OrderRowPartial", Model.Orders)
            </tbody>
        </table>
    </div>

    @if (!Model.Orders.Any())
    {
        <div class="alert alert-info text-center fw-bold">
            No orders found matching your filters.
        </div>
    }

    @if (Model.HasMoreOrders)
    {
        <div id="loadMoreContainer" class="d-grid mb-4">
            <button id="loadMoreBtn" class="btn btn-outline-warning fw-bold" onclick="loadMoreOrders()">
                <span id="loadMoreSpinner" class="spinner-border spinner-border-sm me-2 d-none"></span>
                Load More
            </button>
        </div>
    }
</div>

@section Scripts {
    <script>
        let currentPage = @Model.Filter.CurrentPage;

        async function loadMoreOrders() {
            const btn = document.getElementById('loadMoreBtn');
            const spinner = document.getElementById('loadMoreSpinner');
            btn.disabled = true;
            spinner.classList.remove('d-none');

            const searchEmail = document.querySelector('[name="SearchEmail"]').value;
            const status = document.querySelector('[name="Status"]').value;
            const dateFrom = document.querySelector('[name="DateFrom"]').value;
            const dateTo = document.querySelector('[name="DateTo"]').value;

            const url = `/Order/LoadMoreOrders?currentPage=${currentPage + 1}&SearchEmail=${encodeURIComponent(searchEmail)}&Status=${encodeURIComponent(status)}&DateFrom=${dateFrom}&DateTo=${dateTo}`;

            const response = await fetch(url);
            const html = await response.text();

            document.getElementById('orderRows').insertAdjacentHTML('beforeend', html);

            currentPage++;

            if (!html.trim()) {
                document.getElementById('loadMoreContainer').remove();
            } else {
                btn.disabled = false;
                spinner.classList.add('d-none');
            }
        }
    </script>
}